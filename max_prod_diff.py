"""
Problem Statement: The product difference between two pairs (a, b) and (c, d) is defined as (a * b) - (c * d).

For example, the product difference between (5, 6) and (2, 7) is (5 * 6) - (2 * 7) = 16.
Given an integer array nums, choose four distinct indices w, x, y, and z such that the product difference 
between pairs (nums[w], nums[x]) and (nums[y], nums[z]) is maximized.

Return the maximum such product difference
"""

class Solution(object):
    def maxProductDifference(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """

        # a list to store all products
        prod = []

        # A first loop to iterate over the list
        for i in range(len(nums)):
            # second loop to iterate over the list
            for j in range(i+1, len(nums)):
                product = nums[i] * nums[j]

                # add the product to the list of products
                prod.append(product)

                # return the difference between the highest and lowest products
        print(max(prod) - min(prod))

nums = [433,9503,8118,1077,4495,796,9166,6896,3243,4091,2992,3543,4887,3531,502,6656,5532,8758,8044,4804,4675,8876,8621,9045,3158,2804,3988,7670,5490,9827,86,9467,8076,3056,2329,8596,5326,8876,2317,6125,9018,5533,4495,5834,5184,1845,3467,1874,9439,6895,393,3519,5093,8510,2705,3854,7019,8121,8891,9189,3379,8976,8013,3203,6495,9218,3155,2382,3941,8715,279,534,4229,3857,6738,4184,7193,5966,8502,5099,6772,6900,4481,8475,7058,7858,4355,1610,6438,3783,8047,1448,2135,633,6559,3736,1731,7494,5455,5656,2764,9423,7247,7878,6548,612,1997,4263,5872,8412,4947,80,8403,1695,1818,4414,4147,1303,6060,7200,2921,8914,1848,5106,3510,6214,1122,1191,6785,8832,6246,1938,1671,5029,6336,509,3249,6145,1248,1464,8461,9955,2727,6549,363,5454,5599,5568,4418,6211,5745,4231,2875,6525,8205,4044,6223,8300,4186,3793,8190,7407,1467,4374,448,3251,4753,4468,5158,4601,5538,9284,5803,6722,6947,470,146,3783,114,1413,1520,9847,6778,2256,2494,8136,2455,3614,8564,6168,9619,7727,4376,2060,1622,7292,3403,6400,8690,3798,8767,6024,907,9518,5323,7389,352,9593,3174,4238,482,9906,9398,1394,6659,5910,544,8907,1860,1141,3097,6748,4254,316,3942,4508,8646,4127,9208,4457,3094,7764,7593,556,256,6881,2830,7980,9346,5419,9444,5495,2034,4996,2970,9731,5823,4180,4671,6344,7009,9439,5396,4812,2265,1386,7799,5796,7130,2137,7777,5617,2762,8201,128,197,1840,6798,1096,7321,3354,4439,5015,7553,9503,4663,5226,9586,3017,3838,5129,1926,6706,3488,9025,3735,2660,6924,4563,8428,9930,7970,1493,757,869,1483,7291,210,7621,9113,1695,2056,4651,5536,7348,6637,1228,3923,671,4434,9278,4944,9166,4618,1473,4726,2847,4018,5135,5745,2454,8878,3310,3495,7920,2769,8764,7732,5886,6642,8060,9401,9090,2043,3410,791,2270,6793,5337,6200,4488,7477,7740,1571,1357,5598,8482,9182,2129,1061,8597,7680,615,8549,9741,4549,1196,34,7990,9452,1980,1901,6825,1954,1247,4927,6576,4224,4172,6256,1339,1689,9545,8272,3951,989,9447,7496,5952,4972,2826,4948,8020,3488,8458,8956,5513,3027,3952,8144,7912,4791,9168,8120,7512,78,926,7681,9181,9184,1983,2409,5581,3970,2828,5478,1554,2570,1418,9092,505,9022,2678,2720,6655,7915,9368,9594,990,6703,6650,6750,320,2432,8867,7052,5908,3331,9000,3523,9357,5915,7527,1036,6716,5038,6595,8678,2189,1777,20,228,3096,7740,158,9728,347,7324,765,4030,7986,8523,996,8647,8391,6831,7122,9504,3684,2691,600,8171,576,9350,8436,3844,4473,8268,4446,9730,2533,7131,8057,4989,8861,7214,6708,2884,6715,5696,972,7779,4693,4408,5576,6472,5189,7236,2183,6998,7716,6475,5906,4525,1472,9799,8354,2625,8228,1687,7320,9601,4448,8166,7810,9461,5735,58,662,3176,5036,5470,2169,2444,1000,3046,7168,2942,6508,3699,956,3551,2049,6373,4190,5658,2816,6083,7264,3649,3958,166,541,7561,4226,643,6244,3721,5489,1418,7090,8437,5617,2403,2433,4453,7619,6549,7842,6031,2002,2051,5614,9142,3279,7901,9417,9725,406,1014,5869,3440,6545,6688,9839,3423,3181,2229,8071,7119,3778,3557,4225,2123,2449,8730,5816,6558,2611,8514,3783,7625,2291,3590,8148,2896,3052,5522,9499,3407,1672,580,3819,3759,7726,872,114,8901,9570,5115,2336,3402,4113,558,3350,7304,183,4377,3237,3131,3822,3222,2029,8805,8432,3450,8739,4603,6016,6532,1352,2096,5900,7977,8970,208,4414,7615,3591,7208,1656,9707,8582,6090,1863,7824,6898,9362,6319,8854,272,6327,4847,6055,5842,5033,4956]

new_sol = Solution()
max_prod_diff = new_sol.maxProductDifference(nums)